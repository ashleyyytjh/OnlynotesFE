stages:
  - test
  - stage
  - production
  - notification 

variables:
  AWS_ACCESS_KEY_ID: "<YOUR_AWS_ACCESS_KEY_ID>"
  AWS_SECRET_ACCESS_KEY: "<YOUR_AWS_SECRET_ACCESS_KEY>"
  AWS_REGION: "us-east-2"
  AMPLIFY_APP_ID: "<YOUR_AMPLIFY_APP_ID>"
  AMPLIFY_BRANCH: "main"
  ACCESS_TOKEN: $GITLAB_TOKEN

test:
 stage: test
 image: node:lts-alpine
 script:
   - npm install
   - npm run build
   - npm run prettier

stage:
  stage: stage
  script:
  - git config --global user.name "CICD"
  - git config --global user.email "CICD@example.com"
  - git fetch --all
  - echo "$GITLAB_TOKEN"
  - git checkout staging
  - git rebase origin/main 
  - git push "https://CD-staging:${GITLAB_TOKEN}@gitlab.com//${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git" staging
  only:
    - main


production:
  stage: production
  script:
  - git config --global user.name "CICD"
  - git config --global user.email "CICD@example.com"
  - git fetch --all
  - echo "$GITLAB_TOKEN"
  - git checkout production
  - git merge origin/main
  - git push "https://CD-staging:${GITLAB_TOKEN}@gitlab.com//${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git" production
  when: manual
  only:
    - main


#TEST
#release:
#  stage: release
#  image: docker:27.1.1
#  services:
#    - docker:27.1.1-dind
#  before_script:
#    - docker info
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#  script:
#    - docker build --pull --target production -t "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHA" -f ./docker/Dockerfile .
#    - docker push "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHA"

success_notification:
  stage: notification  
  script:
    - wget https://raw.githubusercontent.com/DiscordHooks/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - ./send.sh success $DISCORD_WEBHOOK_URL
  when: on_success

failure_notification:
  stage: notification  
  script:
    - wget https://raw.githubusercontent.com/DiscordHooks/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - ./send.sh failure $DISCORD_WEBHOOK_URL
  when: on_failure
